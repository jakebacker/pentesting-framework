import nmap
from multiprocessing import Manager

nmap_scans = {
    "tcp_fast": "-sV -sC -T4",
    "tcp_full": "-sV -sC -T4 -p-",
    "udp_fast": "-sU -T4",
    "udp_full": "-sU -T4 -p-",
    "os_detection": "-O"
}

windows_switch = "-Pn"

class NmapScanner():
    scan_results = Manager().list()
    nma = None

    def scan_callback(self, host, scan_result):
        print("Scan finished")
        self.scan_results.append((host, scan_result))

    def perform_scan(self, ip: str, scan: str, windows: bool, extra: str):
        args = nmap_scans[scan]
        if not args:
            return

        args += " " + extra

        if windows:
            args += " " + windows_switch


        nm = nmap.PortScanner()

        nm.scan(hosts=ip, arguments=args)

        return nm

    def perform_scan_async(self, ip: str, scan: str, windows: bool, extra: str):
        args = nmap_scans[scan]
        if not args:
            return

        args += " " + extra

        if windows:
            args += " " + windows_switch


        nm = nmap.PortScannerAsync()

        print("Beginning scan")
        nm.scan(hosts=ip, arguments=args, callback=self.scan_callback)
        print("Scan started")
        self.nma = nm
